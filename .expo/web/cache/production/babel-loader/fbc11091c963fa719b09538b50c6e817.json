{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{UnavailabilityError}from'@unimodules/core';import{PermissionStatus}from'unimodules-permissions-interface';import mapValues from'lodash/mapValues';import PropTypes from'prop-types';import React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import ViewPropTypes from\"react-native-web/dist/exports/ViewPropTypes\";import ExpoBarCodeScannerModule from\"./ExpoBarCodeScannerModule\";import ExpoBarCodeScannerView from\"./ExpoBarCodeScannerView\";var BarCodeType=ExpoBarCodeScannerModule.BarCodeType,Type=ExpoBarCodeScannerModule.Type;var EVENT_THROTTLE_MS=500;export{PermissionStatus};export var BarCodeScanner=function(_React$Component){_inherits(BarCodeScanner,_React$Component);function BarCodeScanner(){var _this;_classCallCheck(this,BarCodeScanner);_this=_possibleConstructorReturn(this,_getPrototypeOf(BarCodeScanner).apply(this,arguments));_this.lastEvents={};_this.lastEventsTimes={};_this.onObjectDetected=function(callback){return function(_ref){var nativeEvent=_ref.nativeEvent;var type=nativeEvent.type;if(_this.lastEvents[type]&&_this.lastEventsTimes[type]&&JSON.stringify(nativeEvent)===_this.lastEvents[type]&&Date.now()-_this.lastEventsTimes[type]<EVENT_THROTTLE_MS){return;}if(callback){callback(nativeEvent);_this.lastEventsTimes[type]=new Date();_this.lastEvents[type]=JSON.stringify(nativeEvent);}};};return _this;}_createClass(BarCodeScanner,[{key:\"render\",value:function render(){var nativeProps=this.convertNativeProps(this.props);var onBarCodeScanned=this.props.onBarCodeScanned;return React.createElement(ExpoBarCodeScannerView,_extends({},nativeProps,{onBarCodeScanned:this.onObjectDetected(onBarCodeScanned)}));}},{key:\"convertNativeProps\",value:function convertNativeProps(props){var newProps=mapValues(props,this.convertProp);return newProps;}},{key:\"convertProp\",value:function convertProp(value,key){if(typeof value==='string'&&BarCodeScanner.ConversionTables[key]){return BarCodeScanner.ConversionTables[key][value];}return value;}}],[{key:\"getPermissionsAsync\",value:function getPermissionsAsync(){return _regeneratorRuntime.async(function getPermissionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",ExpoBarCodeScannerModule.getPermissionsAsync());case 1:case\"end\":return _context.stop();}}});}},{key:\"requestPermissionsAsync\",value:function requestPermissionsAsync(){return _regeneratorRuntime.async(function requestPermissionsAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",ExpoBarCodeScannerModule.requestPermissionsAsync());case 1:case\"end\":return _context2.stop();}}});}},{key:\"scanFromURLAsync\",value:function scanFromURLAsync(url){var barCodeTypes,_args3=arguments;return _regeneratorRuntime.async(function scanFromURLAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:barCodeTypes=_args3.length>1&&_args3[1]!==undefined?_args3[1]:Object.values(BarCodeType);if(ExpoBarCodeScannerModule.scanFromURLAsync){_context3.next=3;break;}throw new UnavailabilityError('expo-barcode-scanner','scanFromURLAsync');case 3:if(!(Array.isArray(barCodeTypes)&&!barCodeTypes.length)){_context3.next=5;break;}throw new Error('No barCodeTypes specified; provide at least one barCodeType for scanner');case 5:if(!(Platform.OS==='ios')){_context3.next=11;break;}if(!(Array.isArray(barCodeTypes)&&!barCodeTypes.includes(BarCodeType.qr))){_context3.next=8;break;}throw new Error('Only QR type is supported by scanFromURLAsync() on iOS');case 8:_context3.next=10;return _regeneratorRuntime.awrap(ExpoBarCodeScannerModule.scanFromURLAsync(url,[BarCodeType.qr]));case 10:return _context3.abrupt(\"return\",_context3.sent);case 11:_context3.next=13;return _regeneratorRuntime.awrap(ExpoBarCodeScannerModule.scanFromURLAsync(url,barCodeTypes));case 13:return _context3.abrupt(\"return\",_context3.sent);case 14:case\"end\":return _context3.stop();}}});}}]);return BarCodeScanner;}(React.Component);BarCodeScanner.Constants={BarCodeType:BarCodeType,Type:Type};BarCodeScanner.ConversionTables={type:Type};BarCodeScanner.propTypes=_objectSpread({},ViewPropTypes,{onBarCodeScanned:PropTypes.func,barCodeTypes:PropTypes.array,type:PropTypes.oneOfType([PropTypes.string,PropTypes.number])});BarCodeScanner.defaultProps={type:Type.back,barCodeTypes:Object.values(BarCodeType)};var Constants=BarCodeScanner.Constants,getPermissionsAsync=BarCodeScanner.getPermissionsAsync,requestPermissionsAsync=BarCodeScanner.requestPermissionsAsync;export{Constants,getPermissionsAsync,requestPermissionsAsync};","map":{"version":3,"sources":["../src/BarCodeScanner.tsx"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport { PermissionResponse, PermissionStatus } from 'unimodules-permissions-interface';\nimport mapValues from 'lodash/mapValues';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Platform, ViewProps, ViewPropTypes } from 'react-native';\n\nimport ExpoBarCodeScannerModule from './ExpoBarCodeScannerModule';\nimport ExpoBarCodeScannerView from './ExpoBarCodeScannerView';\n\nconst { BarCodeType, Type } = ExpoBarCodeScannerModule;\n\nconst EVENT_THROTTLE_MS = 500;\n\ntype BarCodeEvent = {\n  type: string;\n  data: string;\n  [key: string]: any;\n};\n\nexport type BarCodeEventCallbackArguments = {\n  nativeEvent: BarCodeEvent;\n};\n\nexport type BarCodeScannedCallback = (params: BarCodeEvent) => void;\n\nexport { PermissionResponse, PermissionStatus };\n\nexport interface BarCodeScannerProps extends ViewProps {\n  type?: 'front' | 'back' | number;\n  barCodeTypes?: string[];\n  onBarCodeScanned: BarCodeScannedCallback;\n}\n\nexport class BarCodeScanner extends React.Component<BarCodeScannerProps> {\n  lastEvents: { [key: string]: any } = {};\n  lastEventsTimes: { [key: string]: any } = {};\n\n  static Constants = {\n    BarCodeType,\n    Type,\n  };\n\n  static ConversionTables = {\n    type: Type,\n  };\n\n  static propTypes = {\n    ...ViewPropTypes,\n    onBarCodeScanned: PropTypes.func,\n    barCodeTypes: PropTypes.array,\n    type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  };\n\n  static defaultProps = {\n    type: Type.back,\n    barCodeTypes: Object.values(BarCodeType),\n  };\n\n  static async getPermissionsAsync(): Promise<PermissionResponse> {\n    return ExpoBarCodeScannerModule.getPermissionsAsync();\n  }\n\n  static async requestPermissionsAsync(): Promise<PermissionResponse> {\n    return ExpoBarCodeScannerModule.requestPermissionsAsync();\n  }\n\n  static async scanFromURLAsync(\n    url: string,\n    barCodeTypes: string[] = Object.values(BarCodeType)\n  ): Promise<{ type: string; data: string }> {\n    if (!ExpoBarCodeScannerModule.scanFromURLAsync) {\n      throw new UnavailabilityError('expo-barcode-scanner', 'scanFromURLAsync');\n    }\n    if (Array.isArray(barCodeTypes) && !barCodeTypes.length) {\n      throw new Error('No barCodeTypes specified; provide at least one barCodeType for scanner');\n    }\n\n    if (Platform.OS === 'ios') {\n      if (Array.isArray(barCodeTypes) && !barCodeTypes.includes(BarCodeType.qr)) {\n        // Only QR type is supported on iOS, fail if one tries to use other types\n        throw new Error('Only QR type is supported by scanFromURLAsync() on iOS');\n      }\n      // on iOS use only supported QR type\n      return await ExpoBarCodeScannerModule.scanFromURLAsync(url, [BarCodeType.qr]);\n    }\n\n    // On other platforms, if barCodeTypes is not provided, use all available types\n    return await ExpoBarCodeScannerModule.scanFromURLAsync(url, barCodeTypes);\n  }\n\n  render() {\n    const nativeProps = this.convertNativeProps(this.props);\n    const { onBarCodeScanned } = this.props;\n    return (\n      <ExpoBarCodeScannerView\n        {...nativeProps}\n        onBarCodeScanned={this.onObjectDetected(onBarCodeScanned)}\n      />\n    );\n  }\n\n  // coordinates of cornerPoints and boundingBox are represented in DP (Display-Indepent Points) unit\n  // React Native is using the same unit\n  onObjectDetected = (callback?: BarCodeScannedCallback) => ({\n    nativeEvent,\n  }: BarCodeEventCallbackArguments) => {\n    const { type } = nativeEvent;\n    if (\n      this.lastEvents[type] &&\n      this.lastEventsTimes[type] &&\n      JSON.stringify(nativeEvent) === this.lastEvents[type] &&\n      Date.now() - this.lastEventsTimes[type] < EVENT_THROTTLE_MS\n    ) {\n      return;\n    }\n\n    if (callback) {\n      callback(nativeEvent);\n      this.lastEventsTimes[type] = new Date();\n      this.lastEvents[type] = JSON.stringify(nativeEvent);\n    }\n  };\n\n  convertNativeProps(props: BarCodeScannerProps) {\n    const newProps = mapValues(props, this.convertProp);\n    return newProps;\n  }\n\n  convertProp(value: any, key: string): any {\n    if (typeof value === 'string' && BarCodeScanner.ConversionTables[key]) {\n      return BarCodeScanner.ConversionTables[key][value];\n    }\n    return value;\n  }\n}\n\nexport const { Constants, getPermissionsAsync, requestPermissionsAsync } = BarCodeScanner;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}