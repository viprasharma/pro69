{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});var ALPHA_INDEX={'&lt':'<','&gt':'>','&quot':'\"','&apos':'\\'','&amp':'&','&lt;':'<','&gt;':'>','&quot;':'\"','&apos;':'\\'','&amp;':'&'};var CHAR_INDEX={60:'lt',62:'gt',34:'quot',39:'apos',38:'amp'};var CHAR_S_INDEX={'<':'&lt;','>':'&gt;','\"':'&quot;','\\'':'&apos;','&':'&amp;'};var XmlEntities=function(){function XmlEntities(){}XmlEntities.prototype.encode=function(str){if(!str||!str.length){return'';}return str.replace(/[<>\"'&]/g,function(s){return CHAR_S_INDEX[s];});};XmlEntities.encode=function(str){return new XmlEntities().encode(str);};XmlEntities.prototype.decode=function(str){if(!str||!str.length){return'';}return str.replace(/&#?[0-9a-zA-Z]+;?/g,function(s){if(s.charAt(1)==='#'){var code=s.charAt(2).toLowerCase()==='x'?parseInt(s.substr(3),16):parseInt(s.substr(2));if(isNaN(code)||code<-32768||code>65535){return'';}return String.fromCharCode(code);}return ALPHA_INDEX[s]||s;});};XmlEntities.decode=function(str){return new XmlEntities().decode(str);};XmlEntities.prototype.encodeNonUTF=function(str){if(!str||!str.length){return'';}var strLength=str.length;var result='';var i=0;while(i<strLength){var c=str.charCodeAt(i);var alpha=CHAR_INDEX[c];if(alpha){result+=\"&\"+alpha+\";\";i++;continue;}if(c<32||c>126){result+='&#'+c+';';}else{result+=str.charAt(i);}i++;}return result;};XmlEntities.encodeNonUTF=function(str){return new XmlEntities().encodeNonUTF(str);};XmlEntities.prototype.encodeNonASCII=function(str){if(!str||!str.length){return'';}var strLenght=str.length;var result='';var i=0;while(i<strLenght){var c=str.charCodeAt(i);if(c<=255){result+=str[i++];continue;}result+='&#'+c+';';i++;}return result;};XmlEntities.encodeNonASCII=function(str){return new XmlEntities().encodeNonASCII(str);};return XmlEntities;}();exports.XmlEntities=XmlEntities;","map":{"version":3,"sources":["C:/Users/Arjun/AppData/Roaming/npm/node_modules/expo-cli/node_modules/html-entities/lib/xml-entities.js"],"names":["Object","defineProperty","exports","value","ALPHA_INDEX","CHAR_INDEX","CHAR_S_INDEX","XmlEntities","prototype","encode","str","length","replace","s","decode","charAt","code","toLowerCase","parseInt","substr","isNaN","String","fromCharCode","encodeNonUTF","strLength","result","i","c","charCodeAt","alpha","encodeNonASCII","strLenght"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ALPHA_INDEX = {\n    '&lt': '<',\n    '&gt': '>',\n    '&quot': '\"',\n    '&apos': '\\'',\n    '&amp': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&apos;': '\\'',\n    '&amp;': '&'\n};\nvar CHAR_INDEX = {\n    60: 'lt',\n    62: 'gt',\n    34: 'quot',\n    39: 'apos',\n    38: 'amp'\n};\nvar CHAR_S_INDEX = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&apos;',\n    '&': '&amp;'\n};\nvar XmlEntities = /** @class */ (function () {\n    function XmlEntities() {\n    }\n    XmlEntities.prototype.encode = function (str) {\n        if (!str || !str.length) {\n            return '';\n        }\n        return str.replace(/[<>\"'&]/g, function (s) {\n            return CHAR_S_INDEX[s];\n        });\n    };\n    XmlEntities.encode = function (str) {\n        return new XmlEntities().encode(str);\n    };\n    XmlEntities.prototype.decode = function (str) {\n        if (!str || !str.length) {\n            return '';\n        }\n        return str.replace(/&#?[0-9a-zA-Z]+;?/g, function (s) {\n            if (s.charAt(1) === '#') {\n                var code = s.charAt(2).toLowerCase() === 'x' ?\n                    parseInt(s.substr(3), 16) :\n                    parseInt(s.substr(2));\n                if (isNaN(code) || code < -32768 || code > 65535) {\n                    return '';\n                }\n                return String.fromCharCode(code);\n            }\n            return ALPHA_INDEX[s] || s;\n        });\n    };\n    XmlEntities.decode = function (str) {\n        return new XmlEntities().decode(str);\n    };\n    XmlEntities.prototype.encodeNonUTF = function (str) {\n        if (!str || !str.length) {\n            return '';\n        }\n        var strLength = str.length;\n        var result = '';\n        var i = 0;\n        while (i < strLength) {\n            var c = str.charCodeAt(i);\n            var alpha = CHAR_INDEX[c];\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n            if (c < 32 || c > 126) {\n                result += '&#' + c + ';';\n            }\n            else {\n                result += str.charAt(i);\n            }\n            i++;\n        }\n        return result;\n    };\n    XmlEntities.encodeNonUTF = function (str) {\n        return new XmlEntities().encodeNonUTF(str);\n    };\n    XmlEntities.prototype.encodeNonASCII = function (str) {\n        if (!str || !str.length) {\n            return '';\n        }\n        var strLenght = str.length;\n        var result = '';\n        var i = 0;\n        while (i < strLenght) {\n            var c = str.charCodeAt(i);\n            if (c <= 255) {\n                result += str[i++];\n                continue;\n            }\n            result += '&#' + c + ';';\n            i++;\n        }\n        return result;\n    };\n    XmlEntities.encodeNonASCII = function (str) {\n        return new XmlEntities().encodeNonASCII(str);\n    };\n    return XmlEntities;\n}());\nexports.XmlEntities = XmlEntities;\n"]},"metadata":{},"sourceType":"script"}